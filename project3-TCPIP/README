Name: Zhen Ii
Language : python 2.7

approach:
I did something like TCP Tahoe. first I set cwnd as 1000 Bytes. if this trans process pass in time, I set cwnd = cwnd * 2. If I resend a same package more than 3 times, this will cause a timeout. if time out, I decrease the resend frequency to 20% of Original. loop this until recver get all the data. In our approcah, cwnd has no limit, it would always twice larger than before. this is a bad design.     


Test:
I solved problem one by one. After analysis, I found that a transmation could fail because : 
1.Trans speed too slow 
2.packet drop
3.packet damage
so I solved Drop and damage first. Then I do the test, I found I still couldn't pass: 
--0.1Mbps 10ms deley and large size.

After analysis, I found that some of our resend logic shoud be changed. Then I optimize the resend rules. Then I found I could fail the test about 1/5 chance:
--1Mbps 10ms deley and 50% drop with medium size.

Then I changed resend rules again. then I tried 100 times of tests, I passed 98% of these tests and I believe that 2% is a  3600tcp machine's local network problem, so I ignored that 2%.
